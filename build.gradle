plugins {
	id 'java'
}

repositories {
	mavenLocal()
	maven {
		url = 'https://repo.runelite.net'
	}
	mavenCentral()
}

def runeLiteVersion = 'latest.release'

dependencies {
	compileOnly group: 'net.runelite', name:'client', version: runeLiteVersion

	// HTTP Client
	implementation 'com.squareup.okhttp3:okhttp:4.12.0'
	
	// JSON Processing
	implementation 'com.google.code.gson:gson:2.11.0'

	compileOnly 'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'org.projectlombok:lombok:1.18.34'

	testImplementation 'junit:junit:4.12'
	testImplementation group: 'net.runelite', name:'client', version: runeLiteVersion
	testImplementation group: 'net.runelite', name:'jshell', version: runeLiteVersion
}

group = 'gimpanel'
version = '1.0.0'
sourceCompatibility = '11'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

// Shadow jar for distribution (includes dependencies)
tasks.register('shadowJar', Jar) {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from sourceSets.main.output
	from {
		configurations.runtimeClasspath.collect { file ->
			file.isDirectory() ? file : zipTree(file)
		}
	}
	
	exclude 'META-INF/*.SF'
	exclude 'META-INF/*.DSA'
	exclude 'META-INF/*.RSA'
	exclude 'META-INF/INDEX.LIST'
	exclude '**/module-info.class'
	
	archiveClassifier.set('all')
}
